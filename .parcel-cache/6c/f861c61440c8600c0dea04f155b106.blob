import   "37f17f2cfa7c1f359151dec56797b63a:./config";
const $37f17f2cfa7c1f359151dec56797b63a$var$timeout = function(s) {
    return new Promise(function(_, reject) {
        setTimeout(function() {
            reject(new Error(`Request took too long! Timeout after ${s} second`));
        }, s * 1000);
    });
};
const $37f17f2cfa7c1f359151dec56797b63a$export$440419e74e66489a = async function(url, uploadData) {
    try {
        const fetchPro = uploadData ? fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(uploadData)
        }) : fetch(url);
        const response = await Promise.race([
            fetchPro,
            $37f17f2cfa7c1f359151dec56797b63a$var$timeout($37f17f2cfa7c1f359151dec56797b63a$import$c2e114f4bd386737$9942a9bf321ec808)
        ]);
        const data = await response.json();
        if (!response.ok) throw Error(`${data.message} (${response.status})`);
        return data;
    } catch (error) {
        throw error;
    }
}/*
export const getJSON = async (url) => {
    try {
        const response = await Promise.race([fetch(url),timeout(TIME_OUT_SEC)]) 
        const data = await response.json()
        if(!response.ok) throw Error(`${data.message} (${response.status})`)
        return data
    } catch (error) {
        throw error
    }  
}

export const sendJSON = async (url,uploadData) => {
    try {
        const fetchPro = fetch(url,{
            method:'POST',
            headers:{
                'Content-Type' : 'application/json'
            },
            body: JSON.stringify(uploadData),
        })
        const response = await Promise.race([fetchPro,timeout(TIME_OUT_SEC)]) 
        const data = await response.json()
        if(!response.ok) throw Error(`${data.message} (${response.status})`)
        return data
    } catch (error) {
        throw error
    }  
}
*/ ;
