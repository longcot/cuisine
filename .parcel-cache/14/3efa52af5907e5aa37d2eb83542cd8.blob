import   "4cdf422f6f45aa1ed008fb4276ddd813:url:../../img/icons.svg";
class $4cdf422f6f45aa1ed008fb4276ddd813$export$9099ad97b570f7c {
    _data;
    render(data, render = true) {
        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
        this._data = data;
        const markup = this._generateMarkup();
        console.log(markup);
        console.log(this._data);
        if (!render) return markup;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    update(data) {
        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
        this._data = data;
        const markup = this._generateMarkup();
        const newDOM = document.createRange().createContextualFragment(markup);
        console.log(newDOM);
        const newElements = Array.from(newDOM.querySelectorAll('*'));
        const curElements = Array.from(this._parentElement.querySelectorAll('*'));
        newElements.forEach((newEle, i)=>{
            const curEle = curElements[i];
            if (!newEle.isEqualNode(curEle) && newEle.firstChild?.nodeValue.trim() !== '') curEle.textContent = newEle.textContent;
            if (!newEle.isEqualNode(curEle)) {
                console.log(Array.from(newEle.attributes));
                console.log(Array.from(curEle.attributes));
                Array.from(newEle.attributes).forEach((attr)=>{
                    curEle.setAttribute(attr.name, attr.value);
                });
                console.log(curEle);
            }
        });
    }
    _clear() {
        console.log(this._data);
        this._parentElement.innerHTML = '';
    }
    renderSpinner = ()=>{
        const markup = `\n          <div class="spinner">\n            <svg>\n              <use href="${$4cdf422f6f45aa1ed008fb4276ddd813$import$5e363e6f755f0684$9099ad97b570f7c}#icon-loader"></use>\n            </svg>\n          </div>\n        `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    };
    renderError(message = this._errorMessage) {
        const markup = `\n        <div class="error">\n            <div>\n            <svg>\n                <use href="${$4cdf422f6f45aa1ed008fb4276ddd813$import$5e363e6f755f0684$9099ad97b570f7c}#icon-alert-triangle"></use>\n            </svg>\n            </div>\n            <p>${message}</p>\n        </div>\n        `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    renderMessage(message = this._message) {
        const markup = `\n        <div class="message">\n            <div>\n            <svg>\n                <use href="${$4cdf422f6f45aa1ed008fb4276ddd813$import$5e363e6f755f0684$9099ad97b570f7c}#icon-smile"></use>\n            </svg>\n            </div>\n            <p>${message}</p>\n        </div>\n        `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
}
